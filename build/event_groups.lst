ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"event_groups.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTestWaitCondition,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvTestWaitCondition:
  25              	.LFB15:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* FreeRTOS includes. */
  37:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "FreeRTOS.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "task.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "event_groups.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  42:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  43:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  44:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** header files above, but not in this file, in order to generate the correct
  45:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** privileged Vs unprivileged linkage and placement. */
  46:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  47:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** item value.  It is important they don't clash with the
  50:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #else
  57:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
  62:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** typedef struct xEventGroupDefinition
  64:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
  65:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  68:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  71:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  75:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** } EventGroup_t;
  76:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
  80:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * in uxCurrentEventBits.
  86:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
  95:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  96:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  99:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 102:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			event group structure. */
 105:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
 106:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
 107:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 108:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
 112:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 114:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 115:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 116:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 117:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 120:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				this event group was created statically in case the event group
 122:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				is later deleted. */
 123:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 125:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 129:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 130:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 131:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 132:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 133:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 135:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 136:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 138:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 139:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 141:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 143:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 144:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 145:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Allocate the event group. */
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
 148:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 150:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 151:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 152:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 153:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 155:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 156:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 157:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				event group was allocated statically in case the event group is
 158:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				later deleted. */
 159:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 160:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 161:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 162:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 164:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 165:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 166:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 167:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 168:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 169:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 170:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 171:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 172:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 174:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 175:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 177:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 178:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 179:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 180:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xAlreadyYielded;
 181:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 182:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 184:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 185:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 186:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 188:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 189:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 190:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 192:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 193:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 194:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 196:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 198:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 199:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 200:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 201:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 203:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 205:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 206:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = 0;
 207:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 208:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 209:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 210:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 211:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 212:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 213:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 215:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 216:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				found.  Then enter the blocked state. */
 217:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 218:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 220:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 221:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 222:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				assignment is omitted. */
 223:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = 0;
 224:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 225:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 226:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 227:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 228:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				specified - just return the current event bit value. */
 229:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 230:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 231:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 232:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 233:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 234:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 235:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 237:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 238:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 239:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 240:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 241:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 242:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 243:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 244:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 245:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 246:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 248:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 249:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 250:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 251:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 252:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 254:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 255:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 256:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 257:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 258:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 259:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Although the task got here because it timed out before the
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 262:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 263:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 264:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 265:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 266:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 267:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 268:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 269:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 270:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 271:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 272:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 273:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 274:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 276:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 277:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 278:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 279:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 280:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 281:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 283:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		returned. */
 284:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 285:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 286:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 288:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 289:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 290:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 291:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 293:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 294:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 295:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 297:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 298:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 299:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 300:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 301:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 302:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 303:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 304:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 305:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 306:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 308:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 309:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 311:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 312:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 313:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 315:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 316:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 317:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 319:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 320:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 322:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 323:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 324:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			block. */
 325:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 326:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 327:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 328:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 329:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 330:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 331:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 332:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 333:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 334:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 335:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 336:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 337:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 338:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 339:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 340:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 341:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			specified, so just return the current value. */
 342:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 343:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 344:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 348:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 349:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 350:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			unblock the task. */
 351:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 352:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 353:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 354:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 355:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 356:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 357:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 359:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 361:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 362:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 363:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 364:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 365:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 366:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 367:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 368:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 370:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 371:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			found.  Then enter the blocked state. */
 372:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 373:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 376:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			being returned without being set if it is not done. */
 377:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = 0;
 378:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 379:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 380:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 382:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 383:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 385:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 386:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 387:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 388:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 389:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 390:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 391:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 392:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 393:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 394:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 396:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 397:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 398:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 399:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 400:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 401:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 402:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 403:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 404:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 406:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 407:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 409:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 410:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 411:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 412:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 413:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 414:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 415:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 416:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					else
 417:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 418:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 419:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 420:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 421:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 422:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 423:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 424:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 425:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 426:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 427:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 428:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 429:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 430:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 431:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 433:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 435:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 436:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 437:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 438:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 439:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 440:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 441:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 443:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 444:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 445:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 447:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 448:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 449:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 451:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 452:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 453:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 454:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 455:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 456:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskENTER_CRITICAL();
 457:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 458:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 459:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 461:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		cleared. */
 462:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 463:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear the bits. */
 465:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 466:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 467:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskEXIT_CRITICAL();
 468:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 470:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 471:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 472:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 474:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 476:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 477:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 478:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 479:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 480:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 481:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 483:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 484:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 486:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 488:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 490:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 491:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 492:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 493:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 495:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 496:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 497:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 498:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 499:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 500:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 501:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 502:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 505:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 506:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 507:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t const *pxListEnd;
 508:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** List_t *pxList;
 509:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 510:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 511:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 512:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 514:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 515:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 516:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 517:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 519:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 520:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 521:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 522:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 523:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 525:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 526:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Set the bits. */
 527:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 528:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 530:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 531:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 532:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 533:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 534:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 535:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 536:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 537:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 538:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 539:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 541:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 542:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Just looking for single bit being set. */
 543:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 544:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 545:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					xMatchFound = pdTRUE;
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 547:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 548:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 549:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 550:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 551:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 553:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 554:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* All bits are set. */
 555:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xMatchFound = pdTRUE;
 556:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 560:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 562:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 563:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 564:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 565:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 566:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 567:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 568:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 569:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 570:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 571:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 572:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 575:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				item before removing the task from the event list.  The
 576:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 577:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 578:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				than because it timed out. */
 579:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 580:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 581:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 582:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 583:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 584:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 585:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxListItem = pxNext;
 586:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 587:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 588:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 589:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		bit was set in the control word. */
 590:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 591:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 592:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 595:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 599:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 600:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 601:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 602:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 604:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 605:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 606:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 608:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 610:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and cannot therefore have any bits set. */
 611:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 612:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 613:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 614:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 616:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 617:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 618:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			it again. */
 619:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vPortFree( pxEventBits );
 620:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 621:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 622:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 623:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group could have been allocated statically or
 624:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 625:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 626:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 627:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vPortFree( pxEventBits );
 628:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 629:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 630:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 631:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 632:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 633:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 634:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 635:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 637:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 638:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 639:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 641:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 642:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 643:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 644:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 645:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 646:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 647:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 649:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 650:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 651:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 652:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 653:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 654:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 655:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 657:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
  27              		.loc 1 657 0
  28              		.cfi_startproc
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 13


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 658:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 659:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 660:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 660 0
  34 0000 1AB9     		cbnz	r2, .L2
 661:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 662:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 663:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		set.  Is one already set? */
 664:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 664 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 658:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 658 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 665:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 667:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 669:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 670:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 671:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 672:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 673:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	else
 674:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 675:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 676:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		Are they set already? */
 677:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 677 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 658:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  47              		.loc 1 658 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 666:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
  53              		.loc 1 666 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 678:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 679:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
  59              		.loc 1 679 0
  60 0018 0120     		movs	r0, #1
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 14


  61              	.LVL7:
 680:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 681:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 682:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 683:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 684:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 685:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 686:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return xWaitConditionMet;
 688:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
  62              		.loc 1 688 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE15:
  67              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  68              		.align	1
  69              		.global	xEventGroupCreateStatic
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	xEventGroupCreateStatic:
  76              	.LFB4:
  94:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  77              		.loc 1 94 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL8:
  98:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  82              		.loc 1 98 0
  83 0000 80B1     		cbz	r0, .L13
  94:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  84              		.loc 1 94 0
  85 0002 10B5     		push	{r4, lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90 0004 82B0     		sub	sp, sp, #8
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 16
  93 0006 0446     		mov	r4, r0
  94              	.LBB36:
 105:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
  95              		.loc 1 105 0
  96 0008 2023     		movs	r3, #32
  97 000a 0193     		str	r3, [sp, #4]
 106:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
  98              		.loc 1 106 0
  99 000c 019B     		ldr	r3, [sp, #4]
 100 000e 202B     		cmp	r3, #32
 101 0010 11D0     		beq	.L9
 102              	.LBB37:
 103              	.LBB38:
 104              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 15


   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 16


  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 17


 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 18


 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 105              		.loc 2 195 0
 106              		.syntax unified
 107              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 108 0012 4FF05003 			mov r3, #80												
 109 0016 83F31188 		msr basepri, r3											
 110 001a BFF36F8F 		isb														
 111 001e BFF34F8F 		dsb														
 112              	
 113              	@ 0 "" 2
 114              	.LVL9:
 115              		.thumb
 116              		.syntax unified
 117              	.L10:
 118 0022 FEE7     		b	.L10
 119              	.L13:
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 0
 122              		.cfi_restore 4
 123              		.cfi_restore 14
 124              	.LBE38:
 125              	.LBE37:
 126              	.LBE36:
 127              	.LBB39:
 128              	.LBB40:
 129              		.syntax unified
 130              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 131 0024 4FF05003 			mov r3, #80												
 132 0028 83F31188 		msr basepri, r3											
 133 002c BFF36F8F 		isb														
 134 0030 BFF34F8F 		dsb														
 135              	
 136              	@ 0 "" 2
 137              	.LVL10:
 138              		.thumb
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 19


 139              		.syntax unified
 140              	.L8:
 141 0034 FEE7     		b	.L8
 142              	.L9:
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 147              	.LVL11:
 148              	.LBE40:
 149              	.LBE39:
 115:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 150              		.loc 1 115 0
 151 0036 0023     		movs	r3, #0
 152 0038 40F8043B 		str	r3, [r0], #4
 153              	.LVL12:
 116:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 154              		.loc 1 116 0
 155 003c FFF7FEFF 		bl	vListInitialise
 156              	.LVL13:
 123:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 157              		.loc 1 123 0
 158 0040 0123     		movs	r3, #1
 159 0042 2377     		strb	r3, [r4, #28]
 135:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 160              		.loc 1 135 0
 161 0044 2046     		mov	r0, r4
 162 0046 02B0     		add	sp, sp, #8
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 8
 165              		@ sp needed
 166 0048 10BD     		pop	{r4, pc}
 167              		.cfi_endproc
 168              	.LFE4:
 170              		.section	.text.xEventGroupCreate,"ax",%progbits
 171              		.align	1
 172              		.global	xEventGroupCreate
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	xEventGroupCreate:
 179              	.LFB5:
 143:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 180              		.loc 1 143 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 38B5     		push	{r3, r4, r5, lr}
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 147:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 191              		.loc 1 147 0
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 20


 192 0002 2020     		movs	r0, #32
 193 0004 FFF7FEFF 		bl	pvPortMalloc
 194              	.LVL14:
 149:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 195              		.loc 1 149 0
 196 0008 0446     		mov	r4, r0
 197 000a 28B1     		cbz	r0, .L15
 151:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 198              		.loc 1 151 0
 199 000c 0025     		movs	r5, #0
 200 000e 40F8045B 		str	r5, [r0], #4
 201              	.LVL15:
 152:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 202              		.loc 1 152 0
 203 0012 FFF7FEFF 		bl	vListInitialise
 204              	.LVL16:
 159:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 205              		.loc 1 159 0
 206 0016 2577     		strb	r5, [r4, #28]
 207              	.L15:
 171:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 208              		.loc 1 171 0
 209 0018 2046     		mov	r0, r4
 210 001a 38BD     		pop	{r3, r4, r5, pc}
 211              		.cfi_endproc
 212              	.LFE5:
 214              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 215              		.align	1
 216              		.global	xEventGroupWaitBits
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	xEventGroupWaitBits:
 223              	.LFB7:
 297:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 224              		.loc 1 297 0
 225              		.cfi_startproc
 226              		@ args = 4, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL17:
 229 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 230              	.LCFI6:
 231              		.cfi_def_cfa_offset 32
 232              		.cfi_offset 4, -32
 233              		.cfi_offset 5, -28
 234              		.cfi_offset 6, -24
 235              		.cfi_offset 7, -20
 236              		.cfi_offset 8, -16
 237              		.cfi_offset 9, -12
 238              		.cfi_offset 10, -8
 239              		.cfi_offset 14, -4
 240 0004 DDF82090 		ldr	r9, [sp, #32]
 241              	.LVL18:
 305:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 242              		.loc 1 305 0
 243 0008 60B1     		cbz	r0, .L41
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 21


 244 000a 0646     		mov	r6, r0
 306:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 245              		.loc 1 306 0
 246 000c 11F07F4A 		ands	r10, r1, #-16777216
 247 0010 11D0     		beq	.L20
 248              	.LBB41:
 249              	.LBB42:
 250              		.loc 2 195 0
 251              		.syntax unified
 252              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 253 0012 4FF05003 			mov r3, #80												
 254 0016 83F31188 		msr basepri, r3											
 255 001a BFF36F8F 		isb														
 256 001e BFF34F8F 		dsb														
 257              	
 258              	@ 0 "" 2
 259              	.LVL19:
 260              		.thumb
 261              		.syntax unified
 262              	.L21:
 263 0022 FEE7     		b	.L21
 264              	.LVL20:
 265              	.L41:
 266              	.LBE42:
 267              	.LBE41:
 268              	.LBB43:
 269              	.LBB44:
 270              		.syntax unified
 271              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 272 0024 4FF05003 			mov r3, #80												
 273 0028 83F31188 		msr basepri, r3											
 274 002c BFF36F8F 		isb														
 275 0030 BFF34F8F 		dsb														
 276              	
 277              	@ 0 "" 2
 278              	.LVL21:
 279              		.thumb
 280              		.syntax unified
 281              	.L19:
 282 0034 FEE7     		b	.L19
 283              	.LVL22:
 284              	.L20:
 285              	.LBE44:
 286              	.LBE43:
 307:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 287              		.loc 1 307 0
 288 0036 41B9     		cbnz	r1, .L22
 289              	.LBB45:
 290              	.LBB46:
 291              		.loc 2 195 0
 292              		.syntax unified
 293              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 294 0038 4FF05003 			mov r3, #80												
 295 003c 83F31188 		msr basepri, r3											
 296 0040 BFF36F8F 		isb														
 297 0044 BFF34F8F 		dsb														
 298              	
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 22


 299              	@ 0 "" 2
 300              	.LVL23:
 301              		.thumb
 302              		.syntax unified
 303              	.L23:
 304 0048 FEE7     		b	.L23
 305              	.LVL24:
 306              	.L22:
 307 004a 9846     		mov	r8, r3
 308 004c 1746     		mov	r7, r2
 309 004e 0D46     		mov	r5, r1
 310              	.LBE46:
 311              	.LBE45:
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 312              		.loc 1 310 0
 313 0050 FFF7FEFF 		bl	xTaskGetSchedulerState
 314              	.LVL25:
 315 0054 68B9     		cbnz	r0, .L35
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 316              		.loc 1 310 0 is_stmt 0 discriminator 2
 317 0056 B9F1000F 		cmp	r9, #0
 318 005a 0CD1     		bne	.L36
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 319              		.loc 1 310 0
 320 005c 0123     		movs	r3, #1
 321              	.L24:
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 322              		.loc 1 310 0 discriminator 6
 323 005e 63B9     		cbnz	r3, .L25
 324              	.LBB47:
 325              	.LBB48:
 326              		.loc 2 195 0 is_stmt 1
 327              		.syntax unified
 328              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 329 0060 4FF05003 			mov r3, #80												
 330 0064 83F31188 		msr basepri, r3											
 331 0068 BFF36F8F 		isb														
 332 006c BFF34F8F 		dsb														
 333              	
 334              	@ 0 "" 2
 335              	.LVL26:
 336              		.thumb
 337              		.syntax unified
 338              	.L26:
 339 0070 FEE7     		b	.L26
 340              	.L35:
 341              	.LBE48:
 342              	.LBE47:
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 343              		.loc 1 310 0
 344 0072 0123     		movs	r3, #1
 345 0074 F3E7     		b	.L24
 346              	.L36:
 347 0076 0023     		movs	r3, #0
 348 0078 F1E7     		b	.L24
 349              	.L25:
 314:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 23


 350              		.loc 1 314 0
 351 007a FFF7FEFF 		bl	vTaskSuspendAll
 352              	.LVL27:
 353              	.LBB49:
 316:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 354              		.loc 1 316 0
 355 007e 3468     		ldr	r4, [r6]
 356              	.LVL28:
 319:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 357              		.loc 1 319 0
 358 0080 4246     		mov	r2, r8
 359 0082 2946     		mov	r1, r5
 360 0084 2046     		mov	r0, r4
 361 0086 FFF7FEFF 		bl	prvTestWaitCondition
 362              	.LVL29:
 321:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 363              		.loc 1 321 0
 364 008a 58B3     		cbz	r0, .L27
 365              	.LVL30:
 329:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 366              		.loc 1 329 0
 367 008c 17B1     		cbz	r7, .L28
 331:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 368              		.loc 1 331 0
 369 008e 24EA0503 		bic	r3, r4, r5
 370 0092 3360     		str	r3, [r6]
 371              	.LVL31:
 372              	.L28:
 373              	.LBE49:
 382:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 374              		.loc 1 382 0
 375 0094 FFF7FEFF 		bl	xTaskResumeAll
 376              	.LVL32:
 384:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 377              		.loc 1 384 0
 378 0098 BAF1000F 		cmp	r10, #0
 379 009c 1FD0     		beq	.L17
 386:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 380              		.loc 1 386 0
 381 009e 38B9     		cbnz	r0, .L32
 388:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 382              		.loc 1 388 0
 383 00a0 4FF08052 		mov	r2, #268435456
 384 00a4 1B4B     		ldr	r3, .L42
 385 00a6 1A60     		str	r2, [r3]
 386              		.syntax unified
 387              	@ 388 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 388 00a8 BFF34F8F 		dsb
 389              	@ 0 "" 2
 390              	@ 388 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 391 00ac BFF36F8F 		isb
 392              	@ 0 "" 2
 393              		.thumb
 394              		.syntax unified
 395              	.L32:
 399:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 396              		.loc 1 399 0
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 24


 397 00b0 FFF7FEFF 		bl	uxTaskResetEventItemValue
 398              	.LVL33:
 399 00b4 0446     		mov	r4, r0
 400              	.LVL34:
 401:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 401              		.loc 1 401 0
 402 00b6 10F0007F 		tst	r0, #33554432
 403 00ba 0ED1     		bne	.L33
 403:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 404              		.loc 1 403 0
 405 00bc FFF7FEFF 		bl	vPortEnterCritical
 406              	.LVL35:
 406:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 407              		.loc 1 406 0
 408 00c0 3468     		ldr	r4, [r6]
 409              	.LVL36:
 410:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 410              		.loc 1 410 0
 411 00c2 4246     		mov	r2, r8
 412 00c4 2946     		mov	r1, r5
 413 00c6 2046     		mov	r0, r4
 414 00c8 FFF7FEFF 		bl	prvTestWaitCondition
 415              	.LVL37:
 416 00cc 18B1     		cbz	r0, .L34
 412:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 417              		.loc 1 412 0
 418 00ce 17B1     		cbz	r7, .L34
 414:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 419              		.loc 1 414 0
 420 00d0 24EA0505 		bic	r5, r4, r5
 421              	.LVL38:
 422 00d4 3560     		str	r5, [r6]
 423              	.L34:
 424              	.LVL39:
 427:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 425              		.loc 1 427 0
 426 00d6 FFF7FEFF 		bl	vPortExitCritical
 427              	.LVL40:
 428              	.L33:
 435:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 429              		.loc 1 435 0
 430 00da 24F07F44 		bic	r4, r4, #-16777216
 431              	.LVL41:
 432              	.L17:
 443:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 433              		.loc 1 443 0
 434 00de 2046     		mov	r0, r4
 435 00e0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 436              	.LVL42:
 437              	.L27:
 438              	.LBB50:
 338:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 439              		.loc 1 338 0
 440 00e4 B9F1000F 		cmp	r9, #0
 441 00e8 11D0     		beq	.L38
 351:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 442              		.loc 1 351 0
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 25


 443 00ea 6FB9     		cbnz	r7, .L39
 444              	.LBE50:
 299:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 445              		.loc 1 299 0
 446 00ec 0021     		movs	r1, #0
 447              	.L29:
 448              	.LVL43:
 449              	.LBB51:
 360:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 450              		.loc 1 360 0
 451 00ee B8F1000F 		cmp	r8, #0
 452 00f2 01D0     		beq	.L30
 362:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 453              		.loc 1 362 0
 454 00f4 41F08061 		orr	r1, r1, #67108864
 455              	.LVL44:
 456              	.L30:
 372:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 457              		.loc 1 372 0
 458 00f8 4A46     		mov	r2, r9
 459 00fa 2943     		orrs	r1, r1, r5
 460              	.LVL45:
 461 00fc 301D     		adds	r0, r6, #4
 462              	.LVL46:
 463 00fe FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 464              	.LVL47:
 465 0102 CA46     		mov	r10, r9
 377:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 466              		.loc 1 377 0
 467 0104 0024     		movs	r4, #0
 468              	.LVL48:
 469 0106 C5E7     		b	.L28
 470              	.LVL49:
 471              	.L39:
 353:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 472              		.loc 1 353 0
 473 0108 4FF08071 		mov	r1, #16777216
 474 010c EFE7     		b	.L29
 475              	.L38:
 476 010e CA46     		mov	r10, r9
 477 0110 C0E7     		b	.L28
 478              	.L43:
 479 0112 00BF     		.align	2
 480              	.L42:
 481 0114 04ED00E0 		.word	-536810236
 482              	.LBE51:
 483              		.cfi_endproc
 484              	.LFE7:
 486              		.section	.text.xEventGroupClearBits,"ax",%progbits
 487              		.align	1
 488              		.global	xEventGroupClearBits
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	xEventGroupClearBits:
 495              	.LFB8:
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 26


 447:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 496              		.loc 1 447 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              	.LVL50:
 453:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 501              		.loc 1 453 0
 502 0000 68B1     		cbz	r0, .L51
 447:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 503              		.loc 1 447 0
 504 0002 70B5     		push	{r4, r5, r6, lr}
 505              	.LCFI7:
 506              		.cfi_def_cfa_offset 16
 507              		.cfi_offset 4, -16
 508              		.cfi_offset 5, -12
 509              		.cfi_offset 6, -8
 510              		.cfi_offset 14, -4
 511 0004 0546     		mov	r5, r0
 454:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 512              		.loc 1 454 0
 513 0006 11F07F4F 		tst	r1, #-16777216
 514 000a 11D0     		beq	.L47
 515              	.LBB52:
 516              	.LBB53:
 517              		.loc 2 195 0
 518              		.syntax unified
 519              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 520 000c 4FF05003 			mov r3, #80												
 521 0010 83F31188 		msr basepri, r3											
 522 0014 BFF36F8F 		isb														
 523 0018 BFF34F8F 		dsb														
 524              	
 525              	@ 0 "" 2
 526              	.LVL51:
 527              		.thumb
 528              		.syntax unified
 529              	.L48:
 530 001c FEE7     		b	.L48
 531              	.L51:
 532              	.LCFI8:
 533              		.cfi_def_cfa_offset 0
 534              		.cfi_restore 4
 535              		.cfi_restore 5
 536              		.cfi_restore 6
 537              		.cfi_restore 14
 538              	.LBE53:
 539              	.LBE52:
 540              	.LBB54:
 541              	.LBB55:
 542              		.syntax unified
 543              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 544 001e 4FF05003 			mov r3, #80												
 545 0022 83F31188 		msr basepri, r3											
 546 0026 BFF36F8F 		isb														
 547 002a BFF34F8F 		dsb														
 548              	
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 27


 549              	@ 0 "" 2
 550              	.LVL52:
 551              		.thumb
 552              		.syntax unified
 553              	.L46:
 554 002e FEE7     		b	.L46
 555              	.L47:
 556              	.LCFI9:
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 4, -16
 559              		.cfi_offset 5, -12
 560              		.cfi_offset 6, -8
 561              		.cfi_offset 14, -4
 562 0030 0C46     		mov	r4, r1
 563              	.LBE55:
 564              	.LBE54:
 456:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 565              		.loc 1 456 0
 566 0032 FFF7FEFF 		bl	vPortEnterCritical
 567              	.LVL53:
 462:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 568              		.loc 1 462 0
 569 0036 2E68     		ldr	r6, [r5]
 570              	.LVL54:
 465:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 571              		.loc 1 465 0
 572 0038 26EA0404 		bic	r4, r6, r4
 573              	.LVL55:
 574 003c 2C60     		str	r4, [r5]
 467:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 575              		.loc 1 467 0
 576 003e FFF7FEFF 		bl	vPortExitCritical
 577              	.LVL56:
 470:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 578              		.loc 1 470 0
 579 0042 3046     		mov	r0, r6
 580 0044 70BD     		pop	{r4, r5, r6, pc}
 581              		.cfi_endproc
 582              	.LFE8:
 584              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 585              		.align	1
 586              		.global	vEventGroupClearBitsCallback
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	vEventGroupClearBitsCallback:
 593              	.LFB14:
 651:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 594              		.loc 1 651 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL57:
 599 0000 08B5     		push	{r3, lr}
 600              	.LCFI10:
 601              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 28


 602              		.cfi_offset 3, -8
 603              		.cfi_offset 14, -4
 652:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 604              		.loc 1 652 0
 605 0002 FFF7FEFF 		bl	xEventGroupClearBits
 606              	.LVL58:
 607 0006 08BD     		pop	{r3, pc}
 608              		.cfi_endproc
 609              	.LFE14:
 611              		.section	.text.xEventGroupClearBitsFromISR,"ax",%progbits
 612              		.align	1
 613              		.global	xEventGroupClearBitsFromISR
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	xEventGroupClearBitsFromISR:
 620              	.LFB9:
 476:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 621              		.loc 1 476 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL59:
 626 0000 08B5     		push	{r3, lr}
 627              	.LCFI11:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
 480:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 631              		.loc 1 480 0
 632 0002 0023     		movs	r3, #0
 633 0004 0A46     		mov	r2, r1
 634 0006 0146     		mov	r1, r0
 635              	.LVL60:
 636 0008 0148     		ldr	r0, .L56
 637              	.LVL61:
 638 000a FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 639              	.LVL62:
 483:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 640              		.loc 1 483 0
 641 000e 08BD     		pop	{r3, pc}
 642              	.L57:
 643              		.align	2
 644              	.L56:
 645 0010 00000000 		.word	vEventGroupClearBitsCallback
 646              		.cfi_endproc
 647              	.LFE9:
 649              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 650              		.align	1
 651              		.global	xEventGroupGetBitsFromISR
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	xEventGroupGetBitsFromISR:
 658              	.LFB10:
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 29


 489:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 659              		.loc 1 489 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              	.LVL63:
 665              	.LBB56:
 666              	.LBB57:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 667              		.loc 2 211 0
 668              		.syntax unified
 669              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 670 0000 EFF31183 			mrs r3, basepri											
 671 0004 4FF05002 		mov r2, #80												
 672 0008 82F31188 		msr basepri, r2											
 673 000c BFF36F8F 		isb														
 674 0010 BFF34F8F 		dsb														
 675              	
 676              	@ 0 "" 2
 677              		.thumb
 678              		.syntax unified
 679              	.LBE57:
 680              	.LBE56:
 496:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 681              		.loc 1 496 0
 682 0014 0068     		ldr	r0, [r0]
 683              	.LVL64:
 684              	.LBB58:
 685              	.LBB59:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 30


 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 686              		.loc 2 229 0
 687              		.syntax unified
 688              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 689 0016 83F31188 			msr basepri, r3	
 690              	@ 0 "" 2
 691              		.thumb
 692              		.syntax unified
 693              	.LBE59:
 694              	.LBE58:
 501:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 695              		.loc 1 501 0
 696 001a 7047     		bx	lr
 697              		.cfi_endproc
 698              	.LFE10:
 700              		.section	.text.xEventGroupSetBits,"ax",%progbits
 701              		.align	1
 702              		.global	xEventGroupSetBits
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv4-sp-d16
 708              	xEventGroupSetBits:
 709              	.LFB11:
 505:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 710              		.loc 1 505 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL65:
 715 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 716              	.LCFI12:
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 3, -24
 719              		.cfi_offset 4, -20
 720              		.cfi_offset 5, -16
 721              		.cfi_offset 6, -12
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724              	.LVL66:
 515:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 725              		.loc 1 515 0
 726 0002 60B1     		cbz	r0, .L73
 727 0004 0446     		mov	r4, r0
 516:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 728              		.loc 1 516 0
 729 0006 11F07F4F 		tst	r1, #-16777216
 730 000a 11D0     		beq	.L62
 731              	.LBB60:
 732              	.LBB61:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 733              		.loc 2 195 0
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 31


 734              		.syntax unified
 735              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 736 000c 4FF05003 			mov r3, #80												
 737 0010 83F31188 		msr basepri, r3											
 738 0014 BFF36F8F 		isb														
 739 0018 BFF34F8F 		dsb														
 740              	
 741              	@ 0 "" 2
 742              	.LVL67:
 743              		.thumb
 744              		.syntax unified
 745              	.L63:
 746 001c FEE7     		b	.L63
 747              	.L73:
 748              	.LBE61:
 749              	.LBE60:
 750              	.LBB62:
 751              	.LBB63:
 752              		.syntax unified
 753              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 754 001e 4FF05003 			mov r3, #80												
 755 0022 83F31188 		msr basepri, r3											
 756 0026 BFF36F8F 		isb														
 757 002a BFF34F8F 		dsb														
 758              	
 759              	@ 0 "" 2
 760              	.LVL68:
 761              		.thumb
 762              		.syntax unified
 763              	.L61:
 764 002e FEE7     		b	.L61
 765              	.L62:
 766 0030 0D46     		mov	r5, r1
 767              	.LVL69:
 768              	.LBE63:
 769              	.LBE62:
 519:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 770              		.loc 1 519 0
 771 0032 00F10C06 		add	r6, r0, #12
 772              	.LVL70:
 520:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 773              		.loc 1 520 0
 774 0036 FFF7FEFF 		bl	vTaskSuspendAll
 775              	.LVL71:
 524:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 776              		.loc 1 524 0
 777 003a 2069     		ldr	r0, [r4, #16]
 778              	.LVL72:
 527:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 779              		.loc 1 527 0
 780 003c 2368     		ldr	r3, [r4]
 781 003e 2B43     		orrs	r3, r3, r5
 782 0040 2360     		str	r3, [r4]
 509:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 783              		.loc 1 509 0
 784 0042 0025     		movs	r5, #0
 785              	.LVL73:
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 32


 530:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 786              		.loc 1 530 0
 787 0044 0FE0     		b	.L64
 788              	.LVL74:
 789              	.L65:
 552:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 790              		.loc 1 552 0
 791 0046 2368     		ldr	r3, [r4]
 792 0048 32EA0303 		bics	r3, r2, r3
 793 004c 03D0     		beq	.L71
 534:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 794              		.loc 1 534 0
 795 004e 0023     		movs	r3, #0
 796 0050 16E0     		b	.L66
 797              	.L70:
 545:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 798              		.loc 1 545 0
 799 0052 0123     		movs	r3, #1
 800 0054 14E0     		b	.L66
 801              	.L71:
 555:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 802              		.loc 1 555 0
 803 0056 0123     		movs	r3, #1
 804 0058 12E0     		b	.L66
 805              	.LVL75:
 806              	.L68:
 579:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 807              		.loc 1 579 0
 808 005a 2168     		ldr	r1, [r4]
 809              	.LVL76:
 810 005c 41F00071 		orr	r1, r1, #33554432
 811 0060 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 812              	.LVL77:
 813              	.L67:
 534:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 814              		.loc 1 534 0
 815 0064 3846     		mov	r0, r7
 816              	.LVL78:
 817              	.L64:
 530:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 818              		.loc 1 530 0
 819 0066 B042     		cmp	r0, r6
 820 0068 11D0     		beq	.L74
 532:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 821              		.loc 1 532 0
 822 006a 4768     		ldr	r7, [r0, #4]
 823              	.LVL79:
 533:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 824              		.loc 1 533 0
 825 006c 0168     		ldr	r1, [r0]
 826              	.LVL80:
 538:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 827              		.loc 1 538 0
 828 006e 21F07F42 		bic	r2, r1, #-16777216
 829              	.LVL81:
 540:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 830              		.loc 1 540 0
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 33


 831 0072 11F0806F 		tst	r1, #67108864
 832 0076 E6D1     		bne	.L65
 543:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 833              		.loc 1 543 0
 834 0078 2368     		ldr	r3, [r4]
 835 007a 1A42     		tst	r2, r3
 836 007c E9D1     		bne	.L70
 534:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 837              		.loc 1 534 0
 838 007e 0023     		movs	r3, #0
 839              	.L66:
 840              	.LVL82:
 562:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 841              		.loc 1 562 0
 842 0080 002B     		cmp	r3, #0
 843 0082 EFD0     		beq	.L67
 565:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 844              		.loc 1 565 0
 845 0084 11F0807F 		tst	r1, #16777216
 846 0088 E7D0     		beq	.L68
 567:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 847              		.loc 1 567 0
 848 008a 1543     		orrs	r5, r5, r2
 849              	.LVL83:
 850 008c E5E7     		b	.L68
 851              	.LVL84:
 852              	.L74:
 590:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 853              		.loc 1 590 0
 854 008e 2368     		ldr	r3, [r4]
 855 0090 23EA0503 		bic	r3, r3, r5
 856 0094 2360     		str	r3, [r4]
 592:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 857              		.loc 1 592 0
 858 0096 FFF7FEFF 		bl	xTaskResumeAll
 859              	.LVL85:
 595:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 860              		.loc 1 595 0
 861 009a 2068     		ldr	r0, [r4]
 862 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 863              		.cfi_endproc
 864              	.LFE11:
 866              		.section	.text.xEventGroupSync,"ax",%progbits
 867              		.align	1
 868              		.global	xEventGroupSync
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	xEventGroupSync:
 875              	.LFB6:
 177:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 876              		.loc 1 177 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              	.LVL86:
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 34


 183:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 881              		.loc 1 183 0
 882 0000 12F07F4F 		tst	r2, #-16777216
 883 0004 08D0     		beq	.L76
 884              	.LBB64:
 885              	.LBB65:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 886              		.loc 2 195 0
 887              		.syntax unified
 888              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 889 0006 4FF05003 			mov r3, #80												
 890 000a 83F31188 		msr basepri, r3											
 891 000e BFF36F8F 		isb														
 892 0012 BFF34F8F 		dsb														
 893              	
 894              	@ 0 "" 2
 895              	.LVL87:
 896              		.thumb
 897              		.syntax unified
 898              	.L77:
 899 0016 FEE7     		b	.L77
 900              	.LVL88:
 901              	.L76:
 902              	.LBE65:
 903              	.LBE64:
 177:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 904              		.loc 1 177 0
 905 0018 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 906              	.LCFI13:
 907              		.cfi_def_cfa_offset 24
 908              		.cfi_offset 4, -24
 909              		.cfi_offset 5, -20
 910              		.cfi_offset 6, -16
 911              		.cfi_offset 7, -12
 912              		.cfi_offset 8, -8
 913              		.cfi_offset 14, -4
 914 001c 0646     		mov	r6, r0
 915 001e 8846     		mov	r8, r1
 916 0020 1546     		mov	r5, r2
 917 0022 1F46     		mov	r7, r3
 184:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 918              		.loc 1 184 0
 919 0024 42B9     		cbnz	r2, .L78
 920              	.LBB66:
 921              	.LBB67:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 922              		.loc 2 195 0
 923              		.syntax unified
 924              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 925 0026 4FF05003 			mov r3, #80												
 926 002a 83F31188 		msr basepri, r3											
 927 002e BFF36F8F 		isb														
 928 0032 BFF34F8F 		dsb														
 929              	
 930              	@ 0 "" 2
 931              	.LVL89:
 932              		.thumb
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 35


 933              		.syntax unified
 934              	.L79:
 935 0036 FEE7     		b	.L79
 936              	.LVL90:
 937              	.L78:
 938              	.LBE67:
 939              	.LBE66:
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 940              		.loc 1 187 0
 941 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 942              	.LVL91:
 943 003c 58B9     		cbnz	r0, .L90
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 944              		.loc 1 187 0 is_stmt 0 discriminator 2
 945 003e 67B9     		cbnz	r7, .L91
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 946              		.loc 1 187 0
 947 0040 0123     		movs	r3, #1
 948              	.L80:
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 949              		.loc 1 187 0 discriminator 6
 950 0042 63B9     		cbnz	r3, .L81
 951              	.LBB68:
 952              	.LBB69:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 953              		.loc 2 195 0 is_stmt 1
 954              		.syntax unified
 955              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 956 0044 4FF05003 			mov r3, #80												
 957 0048 83F31188 		msr basepri, r3											
 958 004c BFF36F8F 		isb														
 959 0050 BFF34F8F 		dsb														
 960              	
 961              	@ 0 "" 2
 962              	.LVL92:
 963              		.thumb
 964              		.syntax unified
 965              	.L82:
 966 0054 FEE7     		b	.L82
 967              	.L90:
 968              	.LBE69:
 969              	.LBE68:
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 970              		.loc 1 187 0
 971 0056 0123     		movs	r3, #1
 972 0058 F3E7     		b	.L80
 973              	.L91:
 974 005a 0023     		movs	r3, #0
 975 005c F1E7     		b	.L80
 976              	.L81:
 191:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 977              		.loc 1 191 0
 978 005e FFF7FEFF 		bl	vTaskSuspendAll
 979              	.LVL93:
 193:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 980              		.loc 1 193 0
 981 0062 3468     		ldr	r4, [r6]
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 36


 982              	.LVL94:
 195:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 983              		.loc 1 195 0
 984 0064 4146     		mov	r1, r8
 985 0066 3046     		mov	r0, r6
 986 0068 FFF7FEFF 		bl	xEventGroupSetBits
 987              	.LVL95:
 197:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 988              		.loc 1 197 0
 989 006c 44EA0804 		orr	r4, r4, r8
 990              	.LVL96:
 991 0070 35EA0403 		bics	r3, r5, r4
 992 0074 26D1     		bne	.L83
 993              	.LVL97:
 204:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 994              		.loc 1 204 0
 995 0076 3368     		ldr	r3, [r6]
 996 0078 23EA0503 		bic	r3, r3, r5
 997 007c 3360     		str	r3, [r6]
 998              	.LVL98:
 206:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 999              		.loc 1 206 0
 1000 007e 0027     		movs	r7, #0
 1001              	.LVL99:
 1002              	.L84:
 234:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 1003              		.loc 1 234 0
 1004 0080 FFF7FEFF 		bl	xTaskResumeAll
 1005              	.LVL100:
 236:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1006              		.loc 1 236 0
 1007 0084 DFB1     		cbz	r7, .L75
 238:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1008              		.loc 1 238 0
 1009 0086 38B9     		cbnz	r0, .L87
 240:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 1010              		.loc 1 240 0
 1011 0088 4FF08052 		mov	r2, #268435456
 1012 008c 134B     		ldr	r3, .L94
 1013 008e 1A60     		str	r2, [r3]
 1014              		.syntax unified
 1015              	@ 240 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 1016 0090 BFF34F8F 		dsb
 1017              	@ 0 "" 2
 1018              	@ 240 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 1019 0094 BFF36F8F 		isb
 1020              	@ 0 "" 2
 1021              		.thumb
 1022              		.syntax unified
 1023              	.L87:
 251:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 1024              		.loc 1 251 0
 1025 0098 FFF7FEFF 		bl	uxTaskResetEventItemValue
 1026              	.LVL101:
 1027 009c 0446     		mov	r4, r0
 1028              	.LVL102:
 253:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 37


 1029              		.loc 1 253 0
 1030 009e 10F0007F 		tst	r0, #33554432
 1031 00a2 0AD1     		bne	.L88
 256:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 1032              		.loc 1 256 0
 1033 00a4 FFF7FEFF 		bl	vPortEnterCritical
 1034              	.LVL103:
 258:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 1035              		.loc 1 258 0
 1036 00a8 3468     		ldr	r4, [r6]
 1037              	.LVL104:
 264:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 1038              		.loc 1 264 0
 1039 00aa 35EA0403 		bics	r3, r5, r4
 1040 00ae 02D1     		bne	.L89
 266:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 1041              		.loc 1 266 0
 1042 00b0 24EA0505 		bic	r5, r4, r5
 1043              	.LVL105:
 1044 00b4 3560     		str	r5, [r6]
 1045              	.L89:
 273:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 1046              		.loc 1 273 0
 1047 00b6 FFF7FEFF 		bl	vPortExitCritical
 1048              	.LVL106:
 1049              	.L88:
 284:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1050              		.loc 1 284 0
 1051 00ba 24F07F44 		bic	r4, r4, #-16777216
 1052              	.LVL107:
 1053              	.L75:
 293:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1054              		.loc 1 293 0
 1055 00be 2046     		mov	r0, r4
 1056 00c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1057              	.LVL108:
 1058              	.L83:
 210:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 1059              		.loc 1 210 0
 1060 00c4 3FB1     		cbz	r7, .L85
 217:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 1061              		.loc 1 217 0
 1062 00c6 3A46     		mov	r2, r7
 1063 00c8 45F0A061 		orr	r1, r5, #83886080
 1064 00cc 301D     		adds	r0, r6, #4
 1065 00ce FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 1066              	.LVL109:
 223:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 1067              		.loc 1 223 0
 1068 00d2 0024     		movs	r4, #0
 1069 00d4 D4E7     		b	.L84
 1070              	.LVL110:
 1071              	.L85:
 229:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 1072              		.loc 1 229 0
 1073 00d6 3468     		ldr	r4, [r6]
 1074              	.LVL111:
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 38


 1075 00d8 D2E7     		b	.L84
 1076              	.L95:
 1077 00da 00BF     		.align	2
 1078              	.L94:
 1079 00dc 04ED00E0 		.word	-536810236
 1080              		.cfi_endproc
 1081              	.LFE6:
 1083              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1084              		.align	1
 1085              		.global	vEventGroupSetBitsCallback
 1086              		.syntax unified
 1087              		.thumb
 1088              		.thumb_func
 1089              		.fpu fpv4-sp-d16
 1091              	vEventGroupSetBitsCallback:
 1092              	.LFB13:
 643:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 1093              		.loc 1 643 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              	.LVL112:
 1098 0000 08B5     		push	{r3, lr}
 1099              	.LCFI14:
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 3, -8
 1102              		.cfi_offset 14, -4
 644:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1103              		.loc 1 644 0
 1104 0002 FFF7FEFF 		bl	xEventGroupSetBits
 1105              	.LVL113:
 1106 0006 08BD     		pop	{r3, pc}
 1107              		.cfi_endproc
 1108              	.LFE13:
 1110              		.section	.text.vEventGroupDelete,"ax",%progbits
 1111              		.align	1
 1112              		.global	vEventGroupDelete
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu fpv4-sp-d16
 1118              	vEventGroupDelete:
 1119              	.LFB12:
 599:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1120              		.loc 1 599 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              	.LVL114:
 1125 0000 10B5     		push	{r4, lr}
 1126              	.LCFI15:
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 4, -8
 1129              		.cfi_offset 14, -4
 1130 0002 0446     		mov	r4, r0
 1131              	.LVL115:
 603:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 39


 1132              		.loc 1 603 0
 1133 0004 FFF7FEFF 		bl	vTaskSuspendAll
 1134              	.LVL116:
 1135              	.L99:
 607:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1136              		.loc 1 607 0
 1137 0008 6368     		ldr	r3, [r4, #4]
 1138 000a 93B1     		cbz	r3, .L105
 611:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1139              		.loc 1 611 0
 1140 000c 2069     		ldr	r0, [r4, #16]
 1141 000e 04F10C03 		add	r3, r4, #12
 1142 0012 9842     		cmp	r0, r3
 1143 0014 04D0     		beq	.L106
 612:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 1144              		.loc 1 612 0
 1145 0016 4FF00071 		mov	r1, #33554432
 1146 001a FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1147              	.LVL117:
 1148 001e F3E7     		b	.L99
 1149              	.L106:
 1150              	.LBB70:
 1151              	.LBB71:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1152              		.loc 2 195 0
 1153              		.syntax unified
 1154              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1155 0020 4FF05003 			mov r3, #80												
 1156 0024 83F31188 		msr basepri, r3											
 1157 0028 BFF36F8F 		isb														
 1158 002c BFF34F8F 		dsb														
 1159              	
 1160              	@ 0 "" 2
 1161              	.LVL118:
 1162              		.thumb
 1163              		.syntax unified
 1164              	.L101:
 1165 0030 FEE7     		b	.L101
 1166              	.L105:
 1167              	.LBE71:
 1168              	.LBE70:
 625:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 1169              		.loc 1 625 0
 1170 0032 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 1171 0034 13B1     		cbz	r3, .L107
 1172              	.L103:
 636:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1173              		.loc 1 636 0
 1174 0036 FFF7FEFF 		bl	xTaskResumeAll
 1175              	.LVL119:
 1176 003a 10BD     		pop	{r4, pc}
 1177              	.LVL120:
 1178              	.L107:
 627:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 1179              		.loc 1 627 0
 1180 003c 2046     		mov	r0, r4
 1181 003e FFF7FEFF 		bl	vPortFree
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 40


 1182              	.LVL121:
 1183 0042 F8E7     		b	.L103
 1184              		.cfi_endproc
 1185              	.LFE12:
 1187              		.section	.text.xEventGroupSetBitsFromISR,"ax",%progbits
 1188              		.align	1
 1189              		.global	xEventGroupSetBitsFromISR
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	xEventGroupSetBitsFromISR:
 1196              	.LFB16:
 689:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 690:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 692:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 694:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1197              		.loc 1 694 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL122:
 1202 0000 08B5     		push	{r3, lr}
 1203              	.LCFI16:
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 3, -8
 1206              		.cfi_offset 14, -4
 695:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 696:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 698:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 1207              		.loc 1 698 0
 1208 0002 1346     		mov	r3, r2
 1209 0004 0A46     		mov	r2, r1
 1210              	.LVL123:
 1211 0006 0146     		mov	r1, r0
 1212              	.LVL124:
 1213 0008 0148     		ldr	r0, .L110
 1214              	.LVL125:
 1215 000a FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 1216              	.LVL126:
 699:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 701:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1217              		.loc 1 701 0
 1218 000e 08BD     		pop	{r3, pc}
 1219              	.L111:
 1220              		.align	2
 1221              	.L110:
 1222 0010 00000000 		.word	vEventGroupSetBitsCallback
 1223              		.cfi_endproc
 1224              	.LFE16:
 1226              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 1227              		.align	1
 1228              		.global	uxEventGroupGetNumber
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 41


 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu fpv4-sp-d16
 1234              	uxEventGroupGetNumber:
 1235              	.LFB17:
 702:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 704:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 705:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 707:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 709:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1236              		.loc 1 709 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241              	.LVL127:
 710:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t xReturn;
 711:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 712:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xEventGroup == NULL )
 1242              		.loc 1 713 0
 1243 0000 08B1     		cbz	r0, .L114
 714:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 715:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = 0;
 716:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 718:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 719:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 1244              		.loc 1 719 0
 1245 0002 8069     		ldr	r0, [r0, #24]
 1246              	.LVL128:
 1247 0004 7047     		bx	lr
 1248              	.LVL129:
 1249              	.L114:
 715:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 1250              		.loc 1 715 0
 1251 0006 0020     		movs	r0, #0
 1252              	.LVL130:
 720:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 721:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 723:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1253              		.loc 1 723 0
 1254 0008 7047     		bx	lr
 1255              		.cfi_endproc
 1256              	.LFE17:
 1258              		.section	.text.vEventGroupSetNumber,"ax",%progbits
 1259              		.align	1
 1260              		.global	vEventGroupSetNumber
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 42


 1266              	vEventGroupSetNumber:
 1267              	.LFB18:
 724:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 726:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 727:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 729:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 731:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1268              		.loc 1 731 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273              	.LVL131:
 732:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber;
 1274              		.loc 1 732 0
 1275 0000 8161     		str	r1, [r0, #24]
 1276 0002 7047     		bx	lr
 1277              		.cfi_endproc
 1278              	.LFE18:
 1280              		.text
 1281              	.Letext0:
 1282              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 1283              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1284              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1285              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1286              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1287              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1288              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1289              		.file 10 "Inc/FreeRTOSConfig.h"
 1290              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1291              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1292              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h"
 1293              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1294              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1295              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\choee\AppData\Local\Temp\cct3lNXK.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 event_groups.c
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:18     .text.prvTestWaitCondition:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:24     .text.prvTestWaitCondition:00000000 prvTestWaitCondition
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:68     .text.xEventGroupCreateStatic:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:75     .text.xEventGroupCreateStatic:00000000 xEventGroupCreateStatic
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:171    .text.xEventGroupCreate:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:178    .text.xEventGroupCreate:00000000 xEventGroupCreate
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:215    .text.xEventGroupWaitBits:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:222    .text.xEventGroupWaitBits:00000000 xEventGroupWaitBits
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:481    .text.xEventGroupWaitBits:00000114 $d
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:487    .text.xEventGroupClearBits:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:494    .text.xEventGroupClearBits:00000000 xEventGroupClearBits
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:585    .text.vEventGroupClearBitsCallback:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:592    .text.vEventGroupClearBitsCallback:00000000 vEventGroupClearBitsCallback
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:612    .text.xEventGroupClearBitsFromISR:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:619    .text.xEventGroupClearBitsFromISR:00000000 xEventGroupClearBitsFromISR
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:645    .text.xEventGroupClearBitsFromISR:00000010 $d
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:650    .text.xEventGroupGetBitsFromISR:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:657    .text.xEventGroupGetBitsFromISR:00000000 xEventGroupGetBitsFromISR
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:701    .text.xEventGroupSetBits:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:708    .text.xEventGroupSetBits:00000000 xEventGroupSetBits
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:867    .text.xEventGroupSync:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:874    .text.xEventGroupSync:00000000 xEventGroupSync
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1079   .text.xEventGroupSync:000000dc $d
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1084   .text.vEventGroupSetBitsCallback:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1091   .text.vEventGroupSetBitsCallback:00000000 vEventGroupSetBitsCallback
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1111   .text.vEventGroupDelete:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1118   .text.vEventGroupDelete:00000000 vEventGroupDelete
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1188   .text.xEventGroupSetBitsFromISR:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1195   .text.xEventGroupSetBitsFromISR:00000000 xEventGroupSetBitsFromISR
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1222   .text.xEventGroupSetBitsFromISR:00000010 $d
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1227   .text.uxEventGroupGetNumber:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1234   .text.uxEventGroupGetNumber:00000000 uxEventGroupGetNumber
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1259   .text.vEventGroupSetNumber:00000000 $t
C:\Users\choee\AppData\Local\Temp\cct3lNXK.s:1266   .text.vEventGroupSetNumber:00000000 vEventGroupSetNumber
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
vTaskPlaceOnUnorderedEventList
xTimerPendFunctionCallFromISR
vTaskRemoveFromUnorderedEventList
vPortFree
